# Generated by Django 3.1.7 on 2021-03-31 20:47

from datetime import timedelta

from django.conf import settings
from django.db import migrations, models
from django.db.backends.postgresql.schema import DatabaseSchemaEditor
from django.db.migrations.state import StateApps


def set_expiry_date_for_existing_confirmations(
    apps: StateApps, schema_editor: DatabaseSchemaEditor
) -> None:
    Confirmation = apps.get_model("confirmation", "Confirmation")
    # The values at the time of this migration
    INVITATION = 2
    UNSUBSCRIBE = 4
    MULTIUSE_INVITE = 6

    for confirmation in Confirmation.objects.all():
        if confirmation.type in (INVITATION, MULTIUSE_INVITE):
            confirmation.expiry_date = confirmation.date_sent + timedelta(
                settings.INVITATION_LINK_VALIDITY_DAYS
            )
        elif confirmation.type == UNSUBSCRIBE:
            confirmation.expiry_date = confirmation.date_sent + timedelta(1000000)
        else:
            confirmation.expiry_date = confirmation.date_sent + timedelta(
                settings.CONFIRMATION_LINK_DEFAULT_VALIDITY_DAYS
            )
        confirmation.save()


class Migration(migrations.Migration):

    dependencies = [
        ("confirmation", "0007_add_indexes"),
    ]

    operations = [
        migrations.AddField(
            model_name="confirmation",
            name="expiry_date",
            field=models.DateTimeField(db_index=True),
            preserve_default=False,
        ),
        migrations.RunPython(
            set_expiry_date_for_existing_confirmations,
            reverse_code=migrations.RunPython.noop,
            elidable=True,
        ),
    ]
